import { AudioPlayerStatus, getVoiceConnection } from '@discordjs/voice'
import { ChatInputCommandInteraction, GuildMember, SlashCommandBuilder } from 'discord.js'
import { player } from './play'

export const skip = {
  data: new SlashCommandBuilder().setName('skip').setDescription('B·ªè qua b√†i h√°t hi·ªán t·∫°i'),

  async execute(interaction: ChatInputCommandInteraction) {
    try {
      await interaction.deferReply({ ephemeral: true })
      const member = interaction.member as GuildMember
      if (!member.voice.channel) {
        await interaction.editReply({ content: 'B·∫°n ph·∫£i ·ªü trong m·ªôt k√™nh tho·∫°i ƒë·ªÉ s·ª≠ d·ª•ng l·ªánh' })
        return
      }
      const channel = member.voice.channel
      const connection = getVoiceConnection(channel.guild.id)
      if (!connection) {
        await interaction.editReply({ content: 'Bot ch∆∞a ƒë∆∞·ª£c join v√†o k√™nh tho·∫°i. Vui l√≤ng s·ª≠ d·ª•ng l·ªánh join tr∆∞·ªõc!' })
        return
      }
      if (player.state.status !== AudioPlayerStatus.Playing) {
        await interaction.editReply({ content: 'üö´ Kh√¥ng c√≥ b√†i h√°t n√†o ƒëang ph√°t!' })
        return
      }
      player.stop()
      await interaction.editReply({ content: '‚è≠Ô∏è ƒê√£ b·ªè qua b√†i h√°t!' })
      player.on('error', (error) => {
        console.error('L·ªói khi ti·∫øp t·ª•c nh·∫°c: ', error)
      })
    } catch (error) {
      console.error(error)
      await interaction.reply('ƒê√£ c√≥ l·ªói x·∫£y ra khi b·ªè qua b√†i h√°t')
    }
  }
}
